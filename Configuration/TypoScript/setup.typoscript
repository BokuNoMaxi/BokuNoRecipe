plugin.tx_bokunorecipe_bokunorecipe {
    view {
        templateRootPaths.0 = EXT:bokunorecipe/Resources/Private/Templates/
        templateRootPaths.1 = {$plugin.tx_bokunorecipe_bokunorecipe.view.templateRootPath}
        partialRootPaths.0 = EXT:bokunorecipe/Resources/Private/Partials/
        partialRootPaths.1 = {$plugin.tx_bokunorecipe_bokunorecipe.view.partialRootPath}
        layoutRootPaths.0 = EXT:bokunorecipe/Resources/Private/Layouts/
        layoutRootPaths.1 = {$plugin.tx_bokunorecipe_bokunorecipe.view.layoutRootPath}
    }
    persistence {
        storagePid = {$plugin.tx_bokunorecipe_bokunorecipe.persistence.storagePid}
        #recursive = 1
    }
    settings{
        cropMaxCharacters = {$plugin.tx_bokunorecipe_bokunorecipe.cropMaxCharacters}
        recipeCategoryUid = {$plugin.tx_bokunorecipe_bokunorecipe.recipeCategoryUid}
    }
    features {
        #skipDefaultArguments = 1
        # if set to 1, the enable fields are ignored in BE context
        ignoreAllEnableFieldsInBe = 0
        # Should be on by default, but can be disabled if all action in the plugin are uncached
        requireCHashArgumentForActionArguments = 1
    }
    mvc {
        #callDefaultActionIfActionCantBeResolved = 1
    }
}
plugin.tx_bokunorecipe_bokunocookinghelper < plugin.tx_bokunorecipe_bokunorecipe

plugin.tx_bokunorecipe_bokunorecipe.persistence.classes {
	BokuNo\Bokunorecipe\Domain\Model\Category {
		mapping {
			recordType = 0
			tableName = sys_category
		}
	}
}

page {
  includeJSFooter {
    bokunorecipe = EXT:bokunorecipe/Resources/Public/JavaScript/main.js
  }
}
